{
  "address": "0x39A614eDF20f573D965A1d058545CB4074E556C4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ENS",
          "name": "_ens",
          "type": "address"
        },
        {
          "internalType": "contract IDecentraNameController",
          "name": "_decentraNameController",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "ControllerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expires",
          "type": "uint256"
        }
      ],
      "name": "NameMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expires",
          "type": "uint256"
        }
      ],
      "name": "NameRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expires",
          "type": "uint256"
        }
      ],
      "name": "NameRenewed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "TLDLocked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GRACE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "available",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "controllers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decentraNameController",
      "outputs": [
        {
          "internalType": "contract IDecentraNameController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "nameExpires",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "register",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "renew",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rootNode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "setResolver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setRootDomainOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "setSubnodeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x42d7525b8393206f7736d43f06cb61b2d79d22ced5467f9ef27d12320924b6ae",
  "receipt": {
    "to": null,
    "from": "0x4CeBBdbBdFe8A1BB3F62A75B5fe9ebaE5D105f8F",
    "contractAddress": "0x39A614eDF20f573D965A1d058545CB4074E556C4",
    "transactionIndex": 21,
    "gasUsed": "1653561",
    "logsBloom": "0x
    "blockHash": "0xd9501ec008041adf2e92e30dc1ed2ab205b3465bfd96882eb1012c1a5374f967",
    "transactionHash": "0x42d7525b8393206f7736d43f06cb61b2d79d22ced5467f9ef27d12320924b6ae",
    "logs": [
      {
        "transactionIndex": 21,
        "blockNumber": 9206714,
        "transactionHash": "0x42d7525b8393206f7736d43f06cb61b2d79d22ced5467f9ef27d12320924b6ae",
        "address": "0x39A614eDF20f573D965A1d058545CB4074E556C4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004cebbdbbdfe8a1bb3f62a75b5fe9ebae5d105f8f"
        ],
        "data": "0x",
        "logIndex": 37,
        "blockHash": "0xd9501ec008041adf2e92e30dc1ed2ab205b3465bfd96882eb1012c1a5374f967"
      }
    ],
    "blockNumber": 9206714,
    "cumulativeGasUsed": "4613198",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x61E3Ee6374AE0d4c04168d666a5dAC7bCFBd57f0",
    "0x53213ecAB90Bc6e32D83E405910aB27F23635fEE"
  ],
  "solcInputHash": "a88ab937d7edb19a9d5df4bbdb2c860c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ENS\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"contract IDecentraNameController\",\"name\":\"_decentraNameController\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"ControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"NameMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"NameRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"NameRenewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"TLDLocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GRACE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decentraNameController\",\"outputs\":[{\"internalType\":\"contract IDecentraNameController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"nameExpires\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"renew\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootNode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setRootDomainOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"register(uint256,address,uint256)\":{\"details\":\"Register a name.\",\"params\":{\"duration\":\"Duration in seconds for the registration.\",\"id\":\"The token ID (keccak256 of the label).\",\"owner\":\"The address that should own the registration.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Reclaim ownership of a name in ENS, if you own it in the registrar.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/root/Root.sol\":\"Root\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\\n */\\ncontract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x8756c97d6004b1ae21517a013bdec72fbf30be7852afb2f395871d280131b250\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/decentraname/IDecentraNameController.sol\":{\"content\":\"pragma solidity >=0.8.4;\\r\\n\\r\\n\\r\\ninterface IDecentraNameController {\\r\\n\\r\\n    function ownerOf(uint256 tokenId) external view returns (address);\\r\\n\\r\\n    function isApprovedOrOwner(address spender, uint256 tokenId) external view returns (bool);\\r\\n\\r\\n    function existsToken(uint256 tokenId) external view returns (bool);\\r\\n\\r\\n    function burnToken(uint256 tokenId) external;\\r\\n\\r\\n    function mintToken(address owner, uint256 id) external;\\r\\n\\r\\n    function mintTokenForTLD(address owner, uint256 id) external;\\r\\n\\r\\n    function transferToken(address to, uint256 id) external;\\r\\n}\",\"keccak256\":\"0xa8ff6a1ab734c511ad20eecfebd5be3b533c937a0e9b140a3fe091454639ac81\"},\"contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\r\\n\\r\\ninterface ENS {\\r\\n\\r\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\r\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\r\\n\\r\\n    // Logged when the owner of a node transfers ownership to a new account.\\r\\n    event Transfer(bytes32 indexed node, address owner);\\r\\n\\r\\n    // Logged when the resolver for a node changes.\\r\\n    event NewResolver(bytes32 indexed node, address resolver);\\r\\n\\r\\n    // Logged when the TTL of a node changes\\r\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\r\\n\\r\\n    // Logged when an operator is added or removed.\\r\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\r\\n\\r\\n    function setRecord(bytes32 node, address owner, address resolver, uint64 ttl) external virtual;\\r\\n    function setSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl) external virtual;\\r\\n    function createSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl) external virtual;\\r\\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) external virtual returns(bytes32);\\r\\n    function setResolver(bytes32 node, address resolver) external virtual;\\r\\n    function setOwner(bytes32 node, address owner) external virtual;\\r\\n    function createSubnode(bytes32 node, bytes32 label, address owner) external virtual returns(bytes32);\\r\\n    function setTTL(bytes32 node, uint64 ttl) external virtual;\\r\\n    function setApprovalForAll(address operator, bool approved) external virtual;\\r\\n    function owner(bytes32 node) external virtual view returns (address);\\r\\n    function resolver(bytes32 node) external virtual view returns (address);\\r\\n    function ttl(bytes32 node) external virtual view returns (uint64);\\r\\n    function recordExists(bytes32 node) external virtual view returns (bool);\\r\\n    function isApprovedForAll(address owner, address operator) external virtual view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xb7d8535619a015dc2405643fd354776094994c1c73321f1ddf56bfc14d2b5bb1\"},\"contracts/root/Controllable.sol\":{\"content\":\"pragma solidity ^0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Controllable is Ownable {\\r\\n    mapping(address => bool) public controllers;\\r\\n\\r\\n    event ControllerChanged(address indexed controller, bool enabled);\\r\\n\\r\\n    modifier onlyController {\\r\\n        require(\\r\\n            controllers[msg.sender],\\r\\n            \\\"Controllable: Caller is not a controller\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function setController(address controller, bool enabled) public onlyOwner {\\r\\n        controllers[controller] = enabled;\\r\\n        emit ControllerChanged(controller, enabled);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x93fd2f338e33aefa6e9e73b010630f0efe51f960754ab47d0dfb65e25c6804f9\"},\"contracts/root/Root.sol\":{\"content\":\"pragma solidity ^0.8.4;\\r\\n\\r\\nimport \\\"../registry/ENS.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./Controllable.sol\\\";\\r\\nimport \\\"../decentraname/IDecentraNameController.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\r\\n\\r\\n// TODO-review : I have extended from ERC721Holder to make this contract as valid NFT owner\\r\\ncontract Root is Ownable, Controllable, ERC721Holder {\\r\\n    bytes32 public constant rootNode = bytes32(0);\\r\\n    uint public constant GRACE_PERIOD = 90 days;\\r\\n\\r\\n    bytes4 private constant INTERFACE_META_ID =\\r\\n        bytes4(keccak256(\\\"supportsInterface(bytes4)\\\"));\\r\\n    // bytes4 constant private RECLAIM_ID = bytes4(keccak256(\\\"reclaim(uint256,address)\\\"));\\r\\n\\r\\n    ENS public ens;\\r\\n\\r\\n    // The dweb NFT token\\r\\n    IDecentraNameController public decentraNameController;\\r\\n\\r\\n    // TODO: set expiry of root domain as infinity\\r\\n    // A map of expiry times\\r\\n    mapping(uint256=>uint) expiries;\\r\\n\\r\\n    // TODO: does locked makes sense now?\\r\\n    mapping(bytes32 => bool) public locked;\\r\\n\\r\\n    event TLDLocked(bytes32 indexed label);\\r\\n    event NameMigrated(uint256 indexed id, address indexed owner, uint expires);\\r\\n    event NameRegistered(uint256 indexed id, address indexed owner, uint expires);\\r\\n    event NameRenewed(uint256 indexed id, uint expires);\\r\\n\\r\\n    constructor(ENS _ens, IDecentraNameController _decentraNameController) {\\r\\n        ens = _ens;\\r\\n        decentraNameController =  _decentraNameController;\\r\\n    }\\r\\n\\r\\n    function setSubnodeOwner(bytes32 label, address owner)\\r\\n        external\\r\\n        onlyController\\r\\n    {\\r\\n        require(!locked[label]);\\r\\n        ens.setSubnodeOwner(rootNode, label, owner);\\r\\n    }\\r\\n\\r\\n    function setResolver(address resolver) external onlyOwner {\\r\\n        ens.setResolver(rootNode, resolver);\\r\\n    }\\r\\n\\r\\n    function lock(bytes32 label) external onlyOwner {\\r\\n        emit TLDLocked(label);\\r\\n        locked[label] = true;\\r\\n    }\\r\\n\\r\\n    function setRootDomainOwner() external onlyOwner {\\r\\n        decentraNameController.mintTokenForTLD(address(this), uint256(rootNode));\\r\\n    }\\r\\n\\r\\n    // TODO: add transfer method to transfer ownership of root node(NFT) in decentraname \\r\\n\\r\\n    // Returns the expiration timestamp of the specified id.\\r\\n    function nameExpires(uint256 id) external view returns(uint) {\\r\\n        return expiries[id];\\r\\n    }\\r\\n\\r\\n    // Returns true iff the specified name is available for registration.\\r\\n    function available(uint256 id) public view returns(bool) {\\r\\n        // Not available if it's registered here or in its grace period.\\r\\n        return expiries[id] + GRACE_PERIOD < block.timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Register a name.\\r\\n     * @param id The token ID (keccak256 of the label).\\r\\n     * @param owner The address that should own the registration.\\r\\n     * @param duration Duration in seconds for the registration.\\r\\n     */\\r\\n\\r\\n    function register(uint256 id, address owner, uint duration) external onlyController returns(uint) {\\r\\n        require(available(id));\\r\\n        require(block.timestamp + duration + GRACE_PERIOD > block.timestamp + GRACE_PERIOD); // Prevent future overflow\\r\\n\\r\\n        expiries[id] = block.timestamp + duration;\\r\\n        if(decentraNameController.existsToken(id)) {\\r\\n            // Name was previously owned, and expired\\r\\n            decentraNameController.burnToken(id);\\r\\n        }\\r\\n        decentraNameController.mintTokenForTLD(owner, id);\\r\\n\\r\\n        emit NameRegistered(id, owner, block.timestamp + duration);\\r\\n\\r\\n        return block.timestamp + duration;\\r\\n    }\\r\\n\\r\\n    function renew(uint256 id, uint duration) external onlyController returns(uint) {\\r\\n        require(expiries[id] + GRACE_PERIOD >= block.timestamp); // Name must be registered here or in grace period\\r\\n        require(expiries[id] + duration + GRACE_PERIOD > duration + GRACE_PERIOD); // Prevent future overflow\\r\\n\\r\\n        expiries[id] += duration;\\r\\n        emit NameRenewed(id, expiries[id]);\\r\\n        return expiries[id];\\r\\n    }\\r\\n\\r\\n    // TODO: revisit this. we may not require reclaim as every url is now NFT\\r\\n    // TODO: review: removing below methods as it is no logner required. Now ownership is no longer managed in ens but in decentraName only\\r\\n    /**\\r\\n     * @dev Reclaim ownership of a name in ENS, if you own it in the registrar.\\r\\n     */\\r\\n    // function reclaim(uint256 id, address owner) external override live {\\r\\n    //     require(decentraNameController.isApprovedOrOwner(msg.sender, id));\\r\\n    //     ens.setSubnodeOwner(baseNode, bytes32(id), owner);\\r\\n    // }\\r\\n\\r\\n    function supportsInterface(bytes4 interfaceID)\\r\\n        external\\r\\n        pure\\r\\n        returns (bool)\\r\\n    {\\r\\n        return interfaceID == INTERFACE_META_ID;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7db0fe90fc34cf7689b5497ef1fe54a4203a9d88a151f56536eb51a797827198\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001e5938038062001e598339818101604052810190620000379190620001db565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002ac565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001be8162000278565b92915050565b600081519050620001d58162000292565b92915050565b60008060408385031215620001ef57600080fd5b6000620001ff85828601620001ad565b92505060206200021285828601620001c4565b9150509250929050565b6000620002298262000258565b9050919050565b60006200023d826200021c565b9050919050565b600062000251826200021c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002838162000230565b81146200028f57600080fd5b50565b6200029d8162000244565b8114620002a957600080fd5b50565b611b9d80620002bc6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806398ea8c62116100ad578063da8c229e11610071578063da8c229e14610331578063e0dba60f14610361578063f2fde38b1461037d578063faff50a814610399578063fca247ac146103b75761012c565b806398ea8c6214610279578063c1a287e214610283578063c475abff146102a1578063cbe9e764146102d1578063d6e4fa86146103015761012c565b80634e543b26116100f45780634e543b26146101e9578063715018a6146102055780638cb8ecec1461020f5780638da5cb5b1461022b57806396e494e8146102495761012c565b806301670ba91461013157806301ffc9a71461014d578063150b7a021461017d5780631d5fe565146101ad5780633f15457f146101cb575b600080fd5b61014b60048036038101906101469190611418565b6103e7565b005b610167600480360381019061016291906114a6565b6104bf565b6040516101749190611699565b60405180910390f35b61019760048036038101906101929190611338565b610529565b6040516101a4919061172f565b60405180910390f35b6101b561053d565b6040516101c29190611765565b60405180910390f35b6101d3610563565b6040516101e0919061174a565b60405180910390f35b61020360048036038101906101fe919061130f565b610589565b005b61020d61069a565b005b6102296004803603810190610224919061146a565b610722565b005b610233610892565b6040516102409190611655565b60405180910390f35b610263600480360381019061025e91906114cf565b6108bb565b6040516102709190611699565b60405180910390f35b6102816108e8565b005b61028b6109fb565b60405161029891906117e0565b60405180910390f35b6102bb60048036038101906102b69190611547565b610a02565b6040516102c891906117e0565b60405180910390f35b6102eb60048036038101906102e69190611418565b610b95565b6040516102f89190611699565b60405180910390f35b61031b600480360381019061031691906114cf565b610bb5565b60405161032891906117e0565b60405180910390f35b61034b6004803603810190610346919061130f565b610bd2565b6040516103589190611699565b60405180910390f35b61037b600480360381019061037691906113b3565b610bf2565b005b6103976004803603810190610392919061130f565b610d17565b005b6103a1610e0f565b6040516103ae91906116b4565b60405180910390f35b6103d160048036038101906103cc91906114f8565b610e16565b6040516103de91906117e0565b60405180910390f35b6103ef611148565b73ffffffffffffffffffffffffffffffffffffffff1661040d610892565b73ffffffffffffffffffffffffffffffffffffffff1614610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a906117c0565b60405180910390fd5b807f1764176cfa565853ba1ded547a830a9f9bff95231ef6fd228b3ddd617577756960405160405180910390a260016005600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600063150b7a0260e01b9050949350505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610591611148565b73ffffffffffffffffffffffffffffffffffffffff166105af610892565b73ffffffffffffffffffffffffffffffffffffffff1614610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc906117c0565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a6000801b836040518363ffffffff1660e01b81526004016106659291906116cf565b600060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b5050505050565b6106a2611148565b73ffffffffffffffffffffffffffffffffffffffff166106c0610892565b73ffffffffffffffffffffffffffffffffffffffff1614610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d906117c0565b60405180910390fd5b6107206000611150565b565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a5906117a0565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900460ff16156107d957600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59236000801b84846040518463ffffffff1660e01b815260040161083b939291906116f8565b602060405180830381600087803b15801561085557600080fd5b505af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d9190611441565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000426276a70060046000858152602001908152602001600020546108e09190611862565b109050919050565b6108f0611148565b73ffffffffffffffffffffffffffffffffffffffff1661090e610892565b73ffffffffffffffffffffffffffffffffffffffff1614610964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095b906117c0565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2f50299306000801b60001c6040518363ffffffff1660e01b81526004016109c7929190611670565b600060405180830381600087803b1580156109e157600080fd5b505af11580156109f5573d6000803e3d6000fd5b50505050565b6276a70081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a87906117a0565b60405180910390fd5b426276a7006004600086815260200190815260200160002054610ab39190611862565b1015610abe57600080fd5b6276a70082610acd9190611862565b6276a700836004600087815260200190815260200160002054610af09190611862565b610afa9190611862565b11610b0457600080fd5b81600460008581526020019081526020016000206000828254610b279190611862565b92505081905550827f9b87a00e30f1ac65d898f070f8a3488fe60517182d0a2098e1b4b93a54aa9bd66004600086815260200190815260200160002054604051610b7191906117e0565b60405180910390a26004600084815260200190815260200160002054905092915050565b60056020528060005260406000206000915054906101000a900460ff1681565b600060046000838152602001908152602001600020549050919050565b60016020528060005260406000206000915054906101000a900460ff1681565b610bfa611148565b73ffffffffffffffffffffffffffffffffffffffff16610c18610892565b73ffffffffffffffffffffffffffffffffffffffff1614610c6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c65906117c0565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf8782604051610d0b9190611699565b60405180910390a25050565b610d1f611148565b73ffffffffffffffffffffffffffffffffffffffff16610d3d610892565b73ffffffffffffffffffffffffffffffffffffffff1614610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8a906117c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfa90611780565b60405180910390fd5b610e0c81611150565b50565b6000801b81565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b906117a0565b60405180910390fd5b610ead846108bb565b610eb657600080fd5b6276a70042610ec59190611862565b6276a7008342610ed59190611862565b610edf9190611862565b11610ee957600080fd5b8142610ef59190611862565b6004600086815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b0468b6856040518263ffffffff1660e01b8152600401610f6791906117e0565b60206040518083038186803b158015610f7f57600080fd5b505afa158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb791906113ef565b1561104a57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b47ec1a856040518263ffffffff1660e01b815260040161101791906117e0565b600060405180830381600087803b15801561103157600080fd5b505af1158015611045573d6000803e3d6000fd5b505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2f5029984866040518363ffffffff1660e01b81526004016110a7929190611670565b600060405180830381600087803b1580156110c157600080fd5b505af11580156110d5573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16847fb3d987963d01b2f68493b4bdb130988f157ea43070d4ad840fee0466ed9370d9844261111e9190611862565b60405161112b91906117e0565b60405180910390a3814261113f9190611862565b90509392505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061122761122284611820565b6117fb565b90508281526020810184848401111561123f57600080fd5b61124a84828561197e565b509392505050565b60008135905061126181611af4565b92915050565b60008135905061127681611b0b565b92915050565b60008151905061128b81611b0b565b92915050565b6000813590506112a081611b22565b92915050565b6000815190506112b581611b22565b92915050565b6000813590506112ca81611b39565b92915050565b600082601f8301126112e157600080fd5b81356112f1848260208601611214565b91505092915050565b60008135905061130981611b50565b92915050565b60006020828403121561132157600080fd5b600061132f84828501611252565b91505092915050565b6000806000806080858703121561134e57600080fd5b600061135c87828801611252565b945050602061136d87828801611252565b935050604061137e878288016112fa565b925050606085013567ffffffffffffffff81111561139b57600080fd5b6113a7878288016112d0565b91505092959194509250565b600080604083850312156113c657600080fd5b60006113d485828601611252565b92505060206113e585828601611267565b9150509250929050565b60006020828403121561140157600080fd5b600061140f8482850161127c565b91505092915050565b60006020828403121561142a57600080fd5b600061143884828501611291565b91505092915050565b60006020828403121561145357600080fd5b6000611461848285016112a6565b91505092915050565b6000806040838503121561147d57600080fd5b600061148b85828601611291565b925050602061149c85828601611252565b9150509250929050565b6000602082840312156114b857600080fd5b60006114c6848285016112bb565b91505092915050565b6000602082840312156114e157600080fd5b60006114ef848285016112fa565b91505092915050565b60008060006060848603121561150d57600080fd5b600061151b868287016112fa565b935050602061152c86828701611252565b925050604061153d868287016112fa565b9150509250925092565b6000806040838503121561155a57600080fd5b6000611568858286016112fa565b9250506020611579858286016112fa565b9150509250929050565b61158c816118b8565b82525050565b61159b816118ca565b82525050565b6115aa816118d6565b82525050565b6115b9816118e0565b82525050565b6115c881611936565b82525050565b6115d78161195a565b82525050565b60006115ea602683611851565b91506115f582611a2d565b604082019050919050565b600061160d602883611851565b915061161882611a7c565b604082019050919050565b6000611630602083611851565b915061163b82611acb565b602082019050919050565b61164f8161192c565b82525050565b600060208201905061166a6000830184611583565b92915050565b60006040820190506116856000830185611583565b6116926020830184611646565b9392505050565b60006020820190506116ae6000830184611592565b92915050565b60006020820190506116c960008301846115a1565b92915050565b60006040820190506116e460008301856115a1565b6116f16020830184611583565b9392505050565b600060608201905061170d60008301866115a1565b61171a60208301856115a1565b6117276040830184611583565b949350505050565b600060208201905061174460008301846115b0565b92915050565b600060208201905061175f60008301846115bf565b92915050565b600060208201905061177a60008301846115ce565b92915050565b60006020820190508181036000830152611799816115dd565b9050919050565b600060208201905081810360008301526117b981611600565b9050919050565b600060208201905081810360008301526117d981611623565b9050919050565b60006020820190506117f56000830184611646565b92915050565b6000611805611816565b9050611811828261198d565b919050565b6000604051905090565b600067ffffffffffffffff82111561183b5761183a6119ed565b5b61184482611a1c565b9050602081019050919050565b600082825260208201905092915050565b600061186d8261192c565b91506118788361192c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118ad576118ac6119be565b5b828201905092915050565b60006118c38261190c565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061194182611948565b9050919050565b60006119538261190c565b9050919050565b60006119658261196c565b9050919050565b60006119778261190c565b9050919050565b82818337600083830152505050565b61199682611a1c565b810181811067ffffffffffffffff821117156119b5576119b46119ed565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f60008201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611afd816118b8565b8114611b0857600080fd5b50565b611b14816118ca565b8114611b1f57600080fd5b50565b611b2b816118d6565b8114611b3657600080fd5b50565b611b42816118e0565b8114611b4d57600080fd5b50565b611b598161192c565b8114611b6457600080fd5b5056fea2646970667358221220cde2fb47d4ea7be68aabd5c1484f2599859d831cd8a06f8368adcf8565a6d30064736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806398ea8c62116100ad578063da8c229e11610071578063da8c229e14610331578063e0dba60f14610361578063f2fde38b1461037d578063faff50a814610399578063fca247ac146103b75761012c565b806398ea8c6214610279578063c1a287e214610283578063c475abff146102a1578063cbe9e764146102d1578063d6e4fa86146103015761012c565b80634e543b26116100f45780634e543b26146101e9578063715018a6146102055780638cb8ecec1461020f5780638da5cb5b1461022b57806396e494e8146102495761012c565b806301670ba91461013157806301ffc9a71461014d578063150b7a021461017d5780631d5fe565146101ad5780633f15457f146101cb575b600080fd5b61014b60048036038101906101469190611418565b6103e7565b005b610167600480360381019061016291906114a6565b6104bf565b6040516101749190611699565b60405180910390f35b61019760048036038101906101929190611338565b610529565b6040516101a4919061172f565b60405180910390f35b6101b561053d565b6040516101c29190611765565b60405180910390f35b6101d3610563565b6040516101e0919061174a565b60405180910390f35b61020360048036038101906101fe919061130f565b610589565b005b61020d61069a565b005b6102296004803603810190610224919061146a565b610722565b005b610233610892565b6040516102409190611655565b60405180910390f35b610263600480360381019061025e91906114cf565b6108bb565b6040516102709190611699565b60405180910390f35b6102816108e8565b005b61028b6109fb565b60405161029891906117e0565b60405180910390f35b6102bb60048036038101906102b69190611547565b610a02565b6040516102c891906117e0565b60405180910390f35b6102eb60048036038101906102e69190611418565b610b95565b6040516102f89190611699565b60405180910390f35b61031b600480360381019061031691906114cf565b610bb5565b60405161032891906117e0565b60405180910390f35b61034b6004803603810190610346919061130f565b610bd2565b6040516103589190611699565b60405180910390f35b61037b600480360381019061037691906113b3565b610bf2565b005b6103976004803603810190610392919061130f565b610d17565b005b6103a1610e0f565b6040516103ae91906116b4565b60405180910390f35b6103d160048036038101906103cc91906114f8565b610e16565b6040516103de91906117e0565b60405180910390f35b6103ef611148565b73ffffffffffffffffffffffffffffffffffffffff1661040d610892565b73ffffffffffffffffffffffffffffffffffffffff1614610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a906117c0565b60405180910390fd5b807f1764176cfa565853ba1ded547a830a9f9bff95231ef6fd228b3ddd617577756960405160405180910390a260016005600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600063150b7a0260e01b9050949350505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610591611148565b73ffffffffffffffffffffffffffffffffffffffff166105af610892565b73ffffffffffffffffffffffffffffffffffffffff1614610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc906117c0565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a6000801b836040518363ffffffff1660e01b81526004016106659291906116cf565b600060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b5050505050565b6106a2611148565b73ffffffffffffffffffffffffffffffffffffffff166106c0610892565b73ffffffffffffffffffffffffffffffffffffffff1614610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d906117c0565b60405180910390fd5b6107206000611150565b565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a5906117a0565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900460ff16156107d957600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59236000801b84846040518463ffffffff1660e01b815260040161083b939291906116f8565b602060405180830381600087803b15801561085557600080fd5b505af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d9190611441565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000426276a70060046000858152602001908152602001600020546108e09190611862565b109050919050565b6108f0611148565b73ffffffffffffffffffffffffffffffffffffffff1661090e610892565b73ffffffffffffffffffffffffffffffffffffffff1614610964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095b906117c0565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2f50299306000801b60001c6040518363ffffffff1660e01b81526004016109c7929190611670565b600060405180830381600087803b1580156109e157600080fd5b505af11580156109f5573d6000803e3d6000fd5b50505050565b6276a70081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a87906117a0565b60405180910390fd5b426276a7006004600086815260200190815260200160002054610ab39190611862565b1015610abe57600080fd5b6276a70082610acd9190611862565b6276a700836004600087815260200190815260200160002054610af09190611862565b610afa9190611862565b11610b0457600080fd5b81600460008581526020019081526020016000206000828254610b279190611862565b92505081905550827f9b87a00e30f1ac65d898f070f8a3488fe60517182d0a2098e1b4b93a54aa9bd66004600086815260200190815260200160002054604051610b7191906117e0565b60405180910390a26004600084815260200190815260200160002054905092915050565b60056020528060005260406000206000915054906101000a900460ff1681565b600060046000838152602001908152602001600020549050919050565b60016020528060005260406000206000915054906101000a900460ff1681565b610bfa611148565b73ffffffffffffffffffffffffffffffffffffffff16610c18610892565b73ffffffffffffffffffffffffffffffffffffffff1614610c6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c65906117c0565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf8782604051610d0b9190611699565b60405180910390a25050565b610d1f611148565b73ffffffffffffffffffffffffffffffffffffffff16610d3d610892565b73ffffffffffffffffffffffffffffffffffffffff1614610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8a906117c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfa90611780565b60405180910390fd5b610e0c81611150565b50565b6000801b81565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b906117a0565b60405180910390fd5b610ead846108bb565b610eb657600080fd5b6276a70042610ec59190611862565b6276a7008342610ed59190611862565b610edf9190611862565b11610ee957600080fd5b8142610ef59190611862565b6004600086815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b0468b6856040518263ffffffff1660e01b8152600401610f6791906117e0565b60206040518083038186803b158015610f7f57600080fd5b505afa158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb791906113ef565b1561104a57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b47ec1a856040518263ffffffff1660e01b815260040161101791906117e0565b600060405180830381600087803b15801561103157600080fd5b505af1158015611045573d6000803e3d6000fd5b505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2f5029984866040518363ffffffff1660e01b81526004016110a7929190611670565b600060405180830381600087803b1580156110c157600080fd5b505af11580156110d5573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16847fb3d987963d01b2f68493b4bdb130988f157ea43070d4ad840fee0466ed9370d9844261111e9190611862565b60405161112b91906117e0565b60405180910390a3814261113f9190611862565b90509392505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061122761122284611820565b6117fb565b90508281526020810184848401111561123f57600080fd5b61124a84828561197e565b509392505050565b60008135905061126181611af4565b92915050565b60008135905061127681611b0b565b92915050565b60008151905061128b81611b0b565b92915050565b6000813590506112a081611b22565b92915050565b6000815190506112b581611b22565b92915050565b6000813590506112ca81611b39565b92915050565b600082601f8301126112e157600080fd5b81356112f1848260208601611214565b91505092915050565b60008135905061130981611b50565b92915050565b60006020828403121561132157600080fd5b600061132f84828501611252565b91505092915050565b6000806000806080858703121561134e57600080fd5b600061135c87828801611252565b945050602061136d87828801611252565b935050604061137e878288016112fa565b925050606085013567ffffffffffffffff81111561139b57600080fd5b6113a7878288016112d0565b91505092959194509250565b600080604083850312156113c657600080fd5b60006113d485828601611252565b92505060206113e585828601611267565b9150509250929050565b60006020828403121561140157600080fd5b600061140f8482850161127c565b91505092915050565b60006020828403121561142a57600080fd5b600061143884828501611291565b91505092915050565b60006020828403121561145357600080fd5b6000611461848285016112a6565b91505092915050565b6000806040838503121561147d57600080fd5b600061148b85828601611291565b925050602061149c85828601611252565b9150509250929050565b6000602082840312156114b857600080fd5b60006114c6848285016112bb565b91505092915050565b6000602082840312156114e157600080fd5b60006114ef848285016112fa565b91505092915050565b60008060006060848603121561150d57600080fd5b600061151b868287016112fa565b935050602061152c86828701611252565b925050604061153d868287016112fa565b9150509250925092565b6000806040838503121561155a57600080fd5b6000611568858286016112fa565b9250506020611579858286016112fa565b9150509250929050565b61158c816118b8565b82525050565b61159b816118ca565b82525050565b6115aa816118d6565b82525050565b6115b9816118e0565b82525050565b6115c881611936565b82525050565b6115d78161195a565b82525050565b60006115ea602683611851565b91506115f582611a2d565b604082019050919050565b600061160d602883611851565b915061161882611a7c565b604082019050919050565b6000611630602083611851565b915061163b82611acb565b602082019050919050565b61164f8161192c565b82525050565b600060208201905061166a6000830184611583565b92915050565b60006040820190506116856000830185611583565b6116926020830184611646565b9392505050565b60006020820190506116ae6000830184611592565b92915050565b60006020820190506116c960008301846115a1565b92915050565b60006040820190506116e460008301856115a1565b6116f16020830184611583565b9392505050565b600060608201905061170d60008301866115a1565b61171a60208301856115a1565b6117276040830184611583565b949350505050565b600060208201905061174460008301846115b0565b92915050565b600060208201905061175f60008301846115bf565b92915050565b600060208201905061177a60008301846115ce565b92915050565b60006020820190508181036000830152611799816115dd565b9050919050565b600060208201905081810360008301526117b981611600565b9050919050565b600060208201905081810360008301526117d981611623565b9050919050565b60006020820190506117f56000830184611646565b92915050565b6000611805611816565b9050611811828261198d565b919050565b6000604051905090565b600067ffffffffffffffff82111561183b5761183a6119ed565b5b61184482611a1c565b9050602081019050919050565b600082825260208201905092915050565b600061186d8261192c565b91506118788361192c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118ad576118ac6119be565b5b828201905092915050565b60006118c38261190c565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061194182611948565b9050919050565b60006119538261190c565b9050919050565b60006119658261196c565b9050919050565b60006119778261190c565b9050919050565b82818337600083830152505050565b61199682611a1c565b810181811067ffffffffffffffff821117156119b5576119b46119ed565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f60008201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611afd816118b8565b8114611b0857600080fd5b50565b611b14816118ca565b8114611b1f57600080fd5b50565b611b2b816118d6565b8114611b3657600080fd5b50565b611b42816118e0565b8114611b4d57600080fd5b50565b611b598161192c565b8114611b6457600080fd5b5056fea2646970667358221220cde2fb47d4ea7be68aabd5c1484f2599859d831cd8a06f8368adcf8565a6d30064736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "register(uint256,address,uint256)": {
        "details": "Register a name.",
        "params": {
          "duration": "Duration in seconds for the registration.",
          "id": "The token ID (keccak256 of the label).",
          "owner": "The address that should own the registration."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "supportsInterface(bytes4)": {
        "details": "Reclaim ownership of a name in ENS, if you own it in the registrar."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 529,
        "contract": "contracts/root/Root.sol:Root",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6118,
        "contract": "contracts/root/Root.sol:Root",
        "label": "controllers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6191,
        "contract": "contracts/root/Root.sol:Root",
        "label": "ens",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(ENS)5106"
      },
      {
        "astId": 6194,
        "contract": "contracts/root/Root.sol:Root",
        "label": "decentraNameController",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IDecentraNameController)744"
      },
      {
        "astId": 6198,
        "contract": "contracts/root/Root.sol:Root",
        "label": "expiries",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 6202,
        "contract": "contracts/root/Root.sol:Root",
        "label": "locked",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ENS)5106": {
        "encoding": "inplace",
        "label": "contract ENS",
        "numberOfBytes": "20"
      },
      "t_contract(IDecentraNameController)744": {
        "encoding": "inplace",
        "label": "contract IDecentraNameController",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}