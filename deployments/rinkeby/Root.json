{
  "address": "0x1ACD83B632A6A38F5C24963384078ffF1c34C847",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ENS",
          "name": "_ens",
          "type": "address"
        },
        {
          "internalType": "contract IDecentraNameController",
          "name": "_decentraNameController",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "ControllerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expires",
          "type": "uint256"
        }
      ],
      "name": "NameMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expires",
          "type": "uint256"
        }
      ],
      "name": "NameRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expires",
          "type": "uint256"
        }
      ],
      "name": "NameRenewed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "TLDLocked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GRACE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "available",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "controllers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decentraNameController",
      "outputs": [
        {
          "internalType": "contract IDecentraNameController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "nameExpires",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "register",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "renew",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rootNode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "setResolver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setRootDomainOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa1b1164391d72110791bc2d185c0372170241f18b8deabe749ea8eb58ed18c1f",
  "receipt": {
    "to": null,
    "from": "0x4CeBBdbBdFe8A1BB3F62A75B5fe9ebaE5D105f8F",
    "contractAddress": "0x1ACD83B632A6A38F5C24963384078ffF1c34C847",
    "transactionIndex": 19,
    "gasUsed": "1527954",
    "logsBloom": "0x
    "blockHash": "0xfd48685fc68edda126bc2bed43d607756dfa3cd251ed098d28fe402d2704c9ef",
    "transactionHash": "0xa1b1164391d72110791bc2d185c0372170241f18b8deabe749ea8eb58ed18c1f",
    "logs": [
      {
        "transactionIndex": 19,
        "blockNumber": 9251791,
        "transactionHash": "0xa1b1164391d72110791bc2d185c0372170241f18b8deabe749ea8eb58ed18c1f",
        "address": "0x1ACD83B632A6A38F5C24963384078ffF1c34C847",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004cebbdbbdfe8a1bb3f62a75b5fe9ebae5d105f8f"
        ],
        "data": "0x",
        "logIndex": 33,
        "blockHash": "0xfd48685fc68edda126bc2bed43d607756dfa3cd251ed098d28fe402d2704c9ef"
      }
    ],
    "blockNumber": 9251791,
    "cumulativeGasUsed": "4499237",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7674579Dd741df5e69482ADe87AdbEB2c5e561f4",
    "0x56FffE3218156288941Ab87B511E93ff128D8162"
  ],
  "solcInputHash": "8acfa5d5fc60624983e398adee1f7112",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ENS\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"contract IDecentraNameController\",\"name\":\"_decentraNameController\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"ControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"NameMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"NameRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"NameRenewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"TLDLocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GRACE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decentraNameController\",\"outputs\":[{\"internalType\":\"contract IDecentraNameController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"nameExpires\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"renew\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootNode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setRootDomainOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"register(uint256,address,uint256)\":{\"details\":\"Register a name.\",\"params\":{\"duration\":\"Duration in seconds for the registration.\",\"id\":\"The token ID (keccak256 of the label).\",\"owner\":\"The address that should own the registration.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Reclaim ownership of a name in ENS, if you own it in the registrar.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/root/Root.sol\":\"Root\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\\n */\\ncontract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x8756c97d6004b1ae21517a013bdec72fbf30be7852afb2f395871d280131b250\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/decentraname/IDecentraNameController.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\n\\ninterface IDecentraNameController {\\n\\n    function ownerOf(uint256 tokenId) external view returns (address);\\n\\n    function isApprovedOrOwner(address spender, uint256 tokenId) external view returns (bool);\\n\\n    function existsToken(uint256 tokenId) external view returns (bool);\\n\\n    function burnToken(uint256 tokenId) external;\\n\\n    function mintToken(address owner, uint256 id) external;\\n\\n    function transferToken(address to, uint256 id, uint8 v, bytes32 r, bytes32 s, address sender) external;\\n}\",\"keccak256\":\"0xd13a96fd50ca659fecda44de57ed353f718d929e1197a0dc33844811ccb2f026\"},\"contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\ninterface ENS {\\n\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    function setRecord(bytes32 node, address owner, address resolver, uint64 ttl, uint8 v, bytes32 r, bytes32 s) external virtual;\\n    function setSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl, uint8 v, bytes32 r, bytes32 s) external virtual;\\n    function createSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl) external virtual;\\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner, uint8 v, bytes32 r, bytes32 s) external virtual returns(bytes32);\\n    function setResolver(bytes32 node, address resolver) external virtual;\\n    function setOwner(bytes32 node, address owner, uint8 v, bytes32 r, bytes32 s) external virtual;\\n    function createSubnode(bytes32 node, bytes32 label, address owner) external virtual returns(bytes32);\\n    function setTTL(bytes32 node, uint64 ttl) external virtual;\\n    function setApprovalForAll(address operator, bool approved) external virtual;\\n    function owner(bytes32 node) external virtual view returns (address);\\n    function resolver(bytes32 node) external virtual view returns (address);\\n    function ttl(bytes32 node) external virtual view returns (uint64);\\n    function isApprovedForAll(address owner, address operator) external virtual view returns (bool);\\n}\\n\",\"keccak256\":\"0x01e3537bc98814687cbab41a2049726f3b006478a341197d01e1743c897996d7\"},\"contracts/root/Controllable.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Controllable is Ownable {\\n    mapping(address => bool) public controllers;\\n\\n    event ControllerChanged(address indexed controller, bool enabled);\\n\\n    modifier onlyController {\\n        require(\\n            controllers[msg.sender],\\n            \\\"Controllable: Caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    function setController(address controller, bool enabled) public onlyOwner {\\n        controllers[controller] = enabled;\\n        emit ControllerChanged(controller, enabled);\\n    }\\n}\\n\",\"keccak256\":\"0x0c364a5b65b6fff279adbe1fd6498c488feabeec781599cd60a5844e80ee7d88\"},\"contracts/root/Root.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"../registry/ENS.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./Controllable.sol\\\";\\nimport \\\"../decentraname/IDecentraNameController.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\n\\ncontract Root is Ownable, Controllable, ERC721Holder {\\n    bytes32 public constant rootNode = bytes32(0);\\n    uint public constant GRACE_PERIOD = 90 days;\\n\\n    bytes4 private constant INTERFACE_META_ID =\\n        bytes4(keccak256(\\\"supportsInterface(bytes4)\\\"));\\n    // bytes4 constant private RECLAIM_ID = bytes4(keccak256(\\\"reclaim(uint256,address)\\\"));\\n\\n    ENS public ens;\\n\\n    // The dweb NFT token\\n    IDecentraNameController public decentraNameController;\\n\\n    // TODO: set expiry of root domain as infinity\\n    // A map of expiry times\\n    mapping(uint256=>uint) expiries;\\n\\n    // TODO: does locked makes sense now?\\n    mapping(bytes32 => bool) public locked;\\n\\n    event TLDLocked(bytes32 indexed label);\\n    event NameMigrated(uint256 indexed id, address indexed owner, uint expires);\\n    event NameRegistered(uint256 indexed id, address indexed owner, uint expires);\\n    event NameRenewed(uint256 indexed id, uint expires);\\n\\n    constructor(ENS _ens, IDecentraNameController _decentraNameController) {\\n        ens = _ens;\\n        decentraNameController =  _decentraNameController;\\n    }\\n\\n    // there is already method in ensregistry to do this\\n    // function setSubnodeOwner(bytes32 label, address owner)\\n    //     external\\n    //     onlyController\\n    // {\\n    //     require(!locked[label]);\\n    //     ens.setSubnodeOwner(rootNode, label, owner);\\n    // }\\n\\n    function setResolver(address resolver) external onlyOwner {\\n        ens.setResolver(rootNode, resolver);\\n    }\\n\\n    function lock(bytes32 label) external onlyOwner {\\n        emit TLDLocked(label);\\n        locked[label] = true;\\n    }\\n\\n    function setRootDomainOwner() external onlyOwner {\\n        decentraNameController.mintToken(address(this), uint256(rootNode));\\n    }\\n\\n    // TODO: add transfer method to transfer ownership of root node(NFT) in decentraname \\n\\n    // Returns the expiration timestamp of the specified id.\\n    function nameExpires(uint256 id) external view returns(uint) {\\n        return expiries[id];\\n    }\\n\\n    // Returns true iff the specified name is available for registration.\\n    function available(uint256 id) public view returns(bool) {\\n        // Not available if it's registered here or in its grace period.\\n        return expiries[id] + GRACE_PERIOD < block.timestamp;\\n    }\\n\\n    /**\\n     * @dev Register a name.\\n     * @param id The token ID (keccak256 of the label).\\n     * @param owner The address that should own the registration.\\n     * @param duration Duration in seconds for the registration.\\n     */\\n\\n    function register(uint256 id, address owner, uint duration) external onlyController returns(uint) {\\n        require(available(id));\\n        require(block.timestamp + duration + GRACE_PERIOD > block.timestamp + GRACE_PERIOD); // Prevent future overflow\\n\\n        expiries[id] = block.timestamp + duration;\\n        if(decentraNameController.existsToken(id)) {\\n            // Name was previously owned, and expired\\n            decentraNameController.burnToken(id);\\n        }\\n        decentraNameController.mintToken(owner, id);\\n\\n        emit NameRegistered(id, owner, block.timestamp + duration);\\n\\n        return block.timestamp + duration;\\n    }\\n\\n    function renew(uint256 id, uint duration) external onlyController returns(uint) {\\n        require(expiries[id] + GRACE_PERIOD >= block.timestamp); // Name must be registered here or in grace period\\n        require(expiries[id] + duration + GRACE_PERIOD > duration + GRACE_PERIOD); // Prevent future overflow\\n\\n        expiries[id] += duration;\\n        emit NameRenewed(id, expiries[id]);\\n        return expiries[id];\\n    }\\n\\n    // TODO: revisit this. we may not require reclaim as every url is now NFT\\n    /**\\n     * @dev Reclaim ownership of a name in ENS, if you own it in the registrar.\\n     */\\n    // function reclaim(uint256 id, address owner) external override live {\\n    //     require(decentraNameController.isApprovedOrOwner(msg.sender, id));\\n    //     ens.setSubnodeOwner(baseNode, bytes32(id), owner);\\n    // }\\n\\n    function supportsInterface(bytes4 interfaceID)\\n        external\\n        pure\\n        returns (bool)\\n    {\\n        return interfaceID == INTERFACE_META_ID;\\n    }\\n}\\n\",\"keccak256\":\"0xedf5aa0099c346676e4714ac453af8ddcf2e43bae754d63223bf7a7bd5098f91\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001c1138038062001c118339818101604052810190620000379190620001db565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002ac565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001be8162000278565b92915050565b600081519050620001d58162000292565b92915050565b60008060408385031215620001ef57600080fd5b6000620001ff85828601620001ad565b92505060206200021285828601620001c4565b9150509250929050565b6000620002298262000258565b9050919050565b60006200023d826200021c565b9050919050565b600062000251826200021c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002838162000230565b81146200028f57600080fd5b50565b6200029d8162000244565b8114620002a957600080fd5b50565b61195580620002bc6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806398ea8c62116100ad578063da8c229e11610071578063da8c229e1461030a578063e0dba60f1461033a578063f2fde38b14610356578063faff50a814610372578063fca247ac1461039057610121565b806398ea8c6214610252578063c1a287e21461025c578063c475abff1461027a578063cbe9e764146102aa578063d6e4fa86146102da57610121565b80633f15457f116100f45780633f15457f146101c05780634e543b26146101de578063715018a6146101fa5780638da5cb5b1461020457806396e494e81461022257610121565b806301670ba91461012657806301ffc9a714610142578063150b7a02146101725780631d5fe565146101a2575b600080fd5b610140600480360381019061013b919061126c565b6103c0565b005b61015c60048036038101906101579190611295565b610498565b6040516101699190611488565b60405180910390f35b61018c6004803603810190610187919061118c565b610502565b60405161019991906114e7565b60405180910390f35b6101aa610516565b6040516101b7919061151d565b60405180910390f35b6101c861053c565b6040516101d59190611502565b60405180910390f35b6101f860048036038101906101f39190611163565b610562565b005b610202610673565b005b61020c6106fb565b6040516102199190611444565b60405180910390f35b61023c600480360381019061023791906112be565b610724565b6040516102499190611488565b60405180910390f35b61025a610751565b005b610264610864565b6040516102719190611598565b60405180910390f35b610294600480360381019061028f9190611336565b61086b565b6040516102a19190611598565b60405180910390f35b6102c460048036038101906102bf919061126c565b6109fe565b6040516102d19190611488565b60405180910390f35b6102f460048036038101906102ef91906112be565b610a1e565b6040516103019190611598565b60405180910390f35b610324600480360381019061031f9190611163565b610a3b565b6040516103319190611488565b60405180910390f35b610354600480360381019061034f9190611207565b610a5b565b005b610370600480360381019061036b9190611163565b610b80565b005b61037a610c78565b60405161038791906114a3565b60405180910390f35b6103aa60048036038101906103a591906112e7565b610c7f565b6040516103b79190611598565b60405180910390f35b6103c8610fb1565b73ffffffffffffffffffffffffffffffffffffffff166103e66106fb565b73ffffffffffffffffffffffffffffffffffffffff161461043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043390611578565b60405180910390fd5b807f1764176cfa565853ba1ded547a830a9f9bff95231ef6fd228b3ddd617577756960405160405180910390a260016005600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600063150b7a0260e01b9050949350505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61056a610fb1565b73ffffffffffffffffffffffffffffffffffffffff166105886106fb565b73ffffffffffffffffffffffffffffffffffffffff16146105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611578565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a6000801b836040518363ffffffff1660e01b815260040161063e9291906114be565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b5050505050565b61067b610fb1565b73ffffffffffffffffffffffffffffffffffffffff166106996106fb565b73ffffffffffffffffffffffffffffffffffffffff16146106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611578565b60405180910390fd5b6106f96000610fb9565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000426276a7006004600085815260200190815260200160002054610749919061161a565b109050919050565b610759610fb1565b73ffffffffffffffffffffffffffffffffffffffff166107776106fb565b73ffffffffffffffffffffffffffffffffffffffff16146107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490611578565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379c65068306000801b60001c6040518363ffffffff1660e01b815260040161083092919061145f565b600060405180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b50505050565b6276a70081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f090611558565b60405180910390fd5b426276a700600460008681526020019081526020016000205461091c919061161a565b101561092757600080fd5b6276a70082610936919061161a565b6276a700836004600087815260200190815260200160002054610959919061161a565b610963919061161a565b1161096d57600080fd5b81600460008581526020019081526020016000206000828254610990919061161a565b92505081905550827f9b87a00e30f1ac65d898f070f8a3488fe60517182d0a2098e1b4b93a54aa9bd660046000868152602001908152602001600020546040516109da9190611598565b60405180910390a26004600084815260200190815260200160002054905092915050565b60056020528060005260406000206000915054906101000a900460ff1681565b600060046000838152602001908152602001600020549050919050565b60016020528060005260406000206000915054906101000a900460ff1681565b610a63610fb1565b73ffffffffffffffffffffffffffffffffffffffff16610a816106fb565b73ffffffffffffffffffffffffffffffffffffffff1614610ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ace90611578565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf8782604051610b749190611488565b60405180910390a25050565b610b88610fb1565b73ffffffffffffffffffffffffffffffffffffffff16610ba66106fb565b73ffffffffffffffffffffffffffffffffffffffff1614610bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf390611578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6390611538565b60405180910390fd5b610c7581610fb9565b50565b6000801b81565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610d0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0490611558565b60405180910390fd5b610d1684610724565b610d1f57600080fd5b6276a70042610d2e919061161a565b6276a7008342610d3e919061161a565b610d48919061161a565b11610d5257600080fd5b8142610d5e919061161a565b6004600086815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b0468b6856040518263ffffffff1660e01b8152600401610dd09190611598565b60206040518083038186803b158015610de857600080fd5b505afa158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e209190611243565b15610eb357600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b47ec1a856040518263ffffffff1660e01b8152600401610e809190611598565b600060405180830381600087803b158015610e9a57600080fd5b505af1158015610eae573d6000803e3d6000fd5b505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379c6506884866040518363ffffffff1660e01b8152600401610f1092919061145f565b600060405180830381600087803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16847fb3d987963d01b2f68493b4bdb130988f157ea43070d4ad840fee0466ed9370d98442610f87919061161a565b604051610f949190611598565b60405180910390a38142610fa8919061161a565b90509392505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061109061108b846115d8565b6115b3565b9050828152602081018484840111156110a857600080fd5b6110b3848285611736565b509392505050565b6000813590506110ca816118ac565b92915050565b6000813590506110df816118c3565b92915050565b6000815190506110f4816118c3565b92915050565b600081359050611109816118da565b92915050565b60008135905061111e816118f1565b92915050565b600082601f83011261113557600080fd5b813561114584826020860161107d565b91505092915050565b60008135905061115d81611908565b92915050565b60006020828403121561117557600080fd5b6000611183848285016110bb565b91505092915050565b600080600080608085870312156111a257600080fd5b60006111b0878288016110bb565b94505060206111c1878288016110bb565b93505060406111d28782880161114e565b925050606085013567ffffffffffffffff8111156111ef57600080fd5b6111fb87828801611124565b91505092959194509250565b6000806040838503121561121a57600080fd5b6000611228858286016110bb565b9250506020611239858286016110d0565b9150509250929050565b60006020828403121561125557600080fd5b6000611263848285016110e5565b91505092915050565b60006020828403121561127e57600080fd5b600061128c848285016110fa565b91505092915050565b6000602082840312156112a757600080fd5b60006112b58482850161110f565b91505092915050565b6000602082840312156112d057600080fd5b60006112de8482850161114e565b91505092915050565b6000806000606084860312156112fc57600080fd5b600061130a8682870161114e565b935050602061131b868287016110bb565b925050604061132c8682870161114e565b9150509250925092565b6000806040838503121561134957600080fd5b60006113578582860161114e565b92505060206113688582860161114e565b9150509250929050565b61137b81611670565b82525050565b61138a81611682565b82525050565b6113998161168e565b82525050565b6113a881611698565b82525050565b6113b7816116ee565b82525050565b6113c681611712565b82525050565b60006113d9602683611609565b91506113e4826117e5565b604082019050919050565b60006113fc602883611609565b915061140782611834565b604082019050919050565b600061141f602083611609565b915061142a82611883565b602082019050919050565b61143e816116e4565b82525050565b60006020820190506114596000830184611372565b92915050565b60006040820190506114746000830185611372565b6114816020830184611435565b9392505050565b600060208201905061149d6000830184611381565b92915050565b60006020820190506114b86000830184611390565b92915050565b60006040820190506114d36000830185611390565b6114e06020830184611372565b9392505050565b60006020820190506114fc600083018461139f565b92915050565b600060208201905061151760008301846113ae565b92915050565b600060208201905061153260008301846113bd565b92915050565b60006020820190508181036000830152611551816113cc565b9050919050565b60006020820190508181036000830152611571816113ef565b9050919050565b6000602082019050818103600083015261159181611412565b9050919050565b60006020820190506115ad6000830184611435565b92915050565b60006115bd6115ce565b90506115c98282611745565b919050565b6000604051905090565b600067ffffffffffffffff8211156115f3576115f26117a5565b5b6115fc826117d4565b9050602081019050919050565b600082825260208201905092915050565b6000611625826116e4565b9150611630836116e4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561166557611664611776565b5b828201905092915050565b600061167b826116c4565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116f982611700565b9050919050565b600061170b826116c4565b9050919050565b600061171d82611724565b9050919050565b600061172f826116c4565b9050919050565b82818337600083830152505050565b61174e826117d4565b810181811067ffffffffffffffff8211171561176d5761176c6117a5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f60008201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6118b581611670565b81146118c057600080fd5b50565b6118cc81611682565b81146118d757600080fd5b50565b6118e38161168e565b81146118ee57600080fd5b50565b6118fa81611698565b811461190557600080fd5b50565b611911816116e4565b811461191c57600080fd5b5056fea26469706673582212203a53be634b23187fa555a8983ca6b42799e40dd7c851c74f9f02e769892ddca164736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806398ea8c62116100ad578063da8c229e11610071578063da8c229e1461030a578063e0dba60f1461033a578063f2fde38b14610356578063faff50a814610372578063fca247ac1461039057610121565b806398ea8c6214610252578063c1a287e21461025c578063c475abff1461027a578063cbe9e764146102aa578063d6e4fa86146102da57610121565b80633f15457f116100f45780633f15457f146101c05780634e543b26146101de578063715018a6146101fa5780638da5cb5b1461020457806396e494e81461022257610121565b806301670ba91461012657806301ffc9a714610142578063150b7a02146101725780631d5fe565146101a2575b600080fd5b610140600480360381019061013b919061126c565b6103c0565b005b61015c60048036038101906101579190611295565b610498565b6040516101699190611488565b60405180910390f35b61018c6004803603810190610187919061118c565b610502565b60405161019991906114e7565b60405180910390f35b6101aa610516565b6040516101b7919061151d565b60405180910390f35b6101c861053c565b6040516101d59190611502565b60405180910390f35b6101f860048036038101906101f39190611163565b610562565b005b610202610673565b005b61020c6106fb565b6040516102199190611444565b60405180910390f35b61023c600480360381019061023791906112be565b610724565b6040516102499190611488565b60405180910390f35b61025a610751565b005b610264610864565b6040516102719190611598565b60405180910390f35b610294600480360381019061028f9190611336565b61086b565b6040516102a19190611598565b60405180910390f35b6102c460048036038101906102bf919061126c565b6109fe565b6040516102d19190611488565b60405180910390f35b6102f460048036038101906102ef91906112be565b610a1e565b6040516103019190611598565b60405180910390f35b610324600480360381019061031f9190611163565b610a3b565b6040516103319190611488565b60405180910390f35b610354600480360381019061034f9190611207565b610a5b565b005b610370600480360381019061036b9190611163565b610b80565b005b61037a610c78565b60405161038791906114a3565b60405180910390f35b6103aa60048036038101906103a591906112e7565b610c7f565b6040516103b79190611598565b60405180910390f35b6103c8610fb1565b73ffffffffffffffffffffffffffffffffffffffff166103e66106fb565b73ffffffffffffffffffffffffffffffffffffffff161461043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043390611578565b60405180910390fd5b807f1764176cfa565853ba1ded547a830a9f9bff95231ef6fd228b3ddd617577756960405160405180910390a260016005600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600063150b7a0260e01b9050949350505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61056a610fb1565b73ffffffffffffffffffffffffffffffffffffffff166105886106fb565b73ffffffffffffffffffffffffffffffffffffffff16146105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611578565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a6000801b836040518363ffffffff1660e01b815260040161063e9291906114be565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b5050505050565b61067b610fb1565b73ffffffffffffffffffffffffffffffffffffffff166106996106fb565b73ffffffffffffffffffffffffffffffffffffffff16146106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611578565b60405180910390fd5b6106f96000610fb9565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000426276a7006004600085815260200190815260200160002054610749919061161a565b109050919050565b610759610fb1565b73ffffffffffffffffffffffffffffffffffffffff166107776106fb565b73ffffffffffffffffffffffffffffffffffffffff16146107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490611578565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379c65068306000801b60001c6040518363ffffffff1660e01b815260040161083092919061145f565b600060405180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b50505050565b6276a70081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f090611558565b60405180910390fd5b426276a700600460008681526020019081526020016000205461091c919061161a565b101561092757600080fd5b6276a70082610936919061161a565b6276a700836004600087815260200190815260200160002054610959919061161a565b610963919061161a565b1161096d57600080fd5b81600460008581526020019081526020016000206000828254610990919061161a565b92505081905550827f9b87a00e30f1ac65d898f070f8a3488fe60517182d0a2098e1b4b93a54aa9bd660046000868152602001908152602001600020546040516109da9190611598565b60405180910390a26004600084815260200190815260200160002054905092915050565b60056020528060005260406000206000915054906101000a900460ff1681565b600060046000838152602001908152602001600020549050919050565b60016020528060005260406000206000915054906101000a900460ff1681565b610a63610fb1565b73ffffffffffffffffffffffffffffffffffffffff16610a816106fb565b73ffffffffffffffffffffffffffffffffffffffff1614610ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ace90611578565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf8782604051610b749190611488565b60405180910390a25050565b610b88610fb1565b73ffffffffffffffffffffffffffffffffffffffff16610ba66106fb565b73ffffffffffffffffffffffffffffffffffffffff1614610bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf390611578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6390611538565b60405180910390fd5b610c7581610fb9565b50565b6000801b81565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610d0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0490611558565b60405180910390fd5b610d1684610724565b610d1f57600080fd5b6276a70042610d2e919061161a565b6276a7008342610d3e919061161a565b610d48919061161a565b11610d5257600080fd5b8142610d5e919061161a565b6004600086815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b0468b6856040518263ffffffff1660e01b8152600401610dd09190611598565b60206040518083038186803b158015610de857600080fd5b505afa158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e209190611243565b15610eb357600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b47ec1a856040518263ffffffff1660e01b8152600401610e809190611598565b600060405180830381600087803b158015610e9a57600080fd5b505af1158015610eae573d6000803e3d6000fd5b505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379c6506884866040518363ffffffff1660e01b8152600401610f1092919061145f565b600060405180830381600087803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16847fb3d987963d01b2f68493b4bdb130988f157ea43070d4ad840fee0466ed9370d98442610f87919061161a565b604051610f949190611598565b60405180910390a38142610fa8919061161a565b90509392505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061109061108b846115d8565b6115b3565b9050828152602081018484840111156110a857600080fd5b6110b3848285611736565b509392505050565b6000813590506110ca816118ac565b92915050565b6000813590506110df816118c3565b92915050565b6000815190506110f4816118c3565b92915050565b600081359050611109816118da565b92915050565b60008135905061111e816118f1565b92915050565b600082601f83011261113557600080fd5b813561114584826020860161107d565b91505092915050565b60008135905061115d81611908565b92915050565b60006020828403121561117557600080fd5b6000611183848285016110bb565b91505092915050565b600080600080608085870312156111a257600080fd5b60006111b0878288016110bb565b94505060206111c1878288016110bb565b93505060406111d28782880161114e565b925050606085013567ffffffffffffffff8111156111ef57600080fd5b6111fb87828801611124565b91505092959194509250565b6000806040838503121561121a57600080fd5b6000611228858286016110bb565b9250506020611239858286016110d0565b9150509250929050565b60006020828403121561125557600080fd5b6000611263848285016110e5565b91505092915050565b60006020828403121561127e57600080fd5b600061128c848285016110fa565b91505092915050565b6000602082840312156112a757600080fd5b60006112b58482850161110f565b91505092915050565b6000602082840312156112d057600080fd5b60006112de8482850161114e565b91505092915050565b6000806000606084860312156112fc57600080fd5b600061130a8682870161114e565b935050602061131b868287016110bb565b925050604061132c8682870161114e565b9150509250925092565b6000806040838503121561134957600080fd5b60006113578582860161114e565b92505060206113688582860161114e565b9150509250929050565b61137b81611670565b82525050565b61138a81611682565b82525050565b6113998161168e565b82525050565b6113a881611698565b82525050565b6113b7816116ee565b82525050565b6113c681611712565b82525050565b60006113d9602683611609565b91506113e4826117e5565b604082019050919050565b60006113fc602883611609565b915061140782611834565b604082019050919050565b600061141f602083611609565b915061142a82611883565b602082019050919050565b61143e816116e4565b82525050565b60006020820190506114596000830184611372565b92915050565b60006040820190506114746000830185611372565b6114816020830184611435565b9392505050565b600060208201905061149d6000830184611381565b92915050565b60006020820190506114b86000830184611390565b92915050565b60006040820190506114d36000830185611390565b6114e06020830184611372565b9392505050565b60006020820190506114fc600083018461139f565b92915050565b600060208201905061151760008301846113ae565b92915050565b600060208201905061153260008301846113bd565b92915050565b60006020820190508181036000830152611551816113cc565b9050919050565b60006020820190508181036000830152611571816113ef565b9050919050565b6000602082019050818103600083015261159181611412565b9050919050565b60006020820190506115ad6000830184611435565b92915050565b60006115bd6115ce565b90506115c98282611745565b919050565b6000604051905090565b600067ffffffffffffffff8211156115f3576115f26117a5565b5b6115fc826117d4565b9050602081019050919050565b600082825260208201905092915050565b6000611625826116e4565b9150611630836116e4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561166557611664611776565b5b828201905092915050565b600061167b826116c4565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116f982611700565b9050919050565b600061170b826116c4565b9050919050565b600061171d82611724565b9050919050565b600061172f826116c4565b9050919050565b82818337600083830152505050565b61174e826117d4565b810181811067ffffffffffffffff8211171561176d5761176c6117a5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f60008201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6118b581611670565b81146118c057600080fd5b50565b6118cc81611682565b81146118d757600080fd5b50565b6118e38161168e565b81146118ee57600080fd5b50565b6118fa81611698565b811461190557600080fd5b50565b611911816116e4565b811461191c57600080fd5b5056fea26469706673582212203a53be634b23187fa555a8983ca6b42799e40dd7c851c74f9f02e769892ddca164736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "register(uint256,address,uint256)": {
        "details": "Register a name.",
        "params": {
          "duration": "Duration in seconds for the registration.",
          "id": "The token ID (keccak256 of the label).",
          "owner": "The address that should own the registration."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "supportsInterface(bytes4)": {
        "details": "Reclaim ownership of a name in ENS, if you own it in the registrar."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 760,
        "contract": "contracts/root/Root.sol:Root",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 19431,
        "contract": "contracts/root/Root.sol:Root",
        "label": "controllers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 19564,
        "contract": "contracts/root/Root.sol:Root",
        "label": "ens",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(ENS)16245"
      },
      {
        "astId": 19567,
        "contract": "contracts/root/Root.sol:Root",
        "label": "decentraNameController",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IDecentraNameController)6749"
      },
      {
        "astId": 19571,
        "contract": "contracts/root/Root.sol:Root",
        "label": "expiries",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 19575,
        "contract": "contracts/root/Root.sol:Root",
        "label": "locked",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ENS)16245": {
        "encoding": "inplace",
        "label": "contract ENS",
        "numberOfBytes": "20"
      },
      "t_contract(IDecentraNameController)6749": {
        "encoding": "inplace",
        "label": "contract IDecentraNameController",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}